{"mappings":"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","sources":["../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-04b292f47a91f0c5.js","index.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4e5dac8afe405db7\";module.bundle.HMR_BUNDLE_ID = \"9faf444bc71f97c6\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      removeErrorOverlay();\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        } // Render the fancy html overlay\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n      document.body.appendChild(overlay);\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\\n          \").concat(stack, \"\\n        </pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n    return;\n  }\n\n  var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n  if (deps) {\n    var fn = new Function('require', 'module', 'exports', asset.output);\n    modules[asset.id] = [fn, deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(module.bundle.root, id).some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","// https://medium.com/analytics-vidhya/maze-generations-algorithms-and-visualizations-9f5e88a3ae37\r\n// https://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/\r\nvar tileSize = 10;\r\n\r\nvar cW;\r\nvar mCan;\r\nvar mCtx;\r\nvar cCan;\r\nvar cCtx;\r\n\r\nvar col;\r\nvar row;\r\nvar afps = 60;\r\nvar fps = 60;\r\nvar randDens = 0.50;\r\nvar useColor = true;\r\nvar showProcess = true;\r\n\r\nconst gen = Object.freeze({\r\n    none: 0,\r\n    CaveCA: 1,\r\n    binaryTree: 2,\r\n    dfs: 3,\r\n    kruskals: 4\r\n})\r\n\r\nvar cgen = gen.none;\r\n\r\nvar timer;\r\nvar timerStartValue;\r\nvar timerValue;\r\n\r\nvar inpCol;\r\nvar inpRow;\r\nvar inpSize\r\nvar inpGenType;\r\nvar inpFps;\r\nvar inpColour;\r\nvar inpShowProcess;\r\n\r\nconst smiley = [\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 1, 0, 0, 1, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 1, 0, 0, 1, 0],\r\n    [0, 0, 1, 1, 0, 0],\r\n    [0, 0, 0, 0, 0, 0]\r\n];\r\nvar arr = smiley;\r\nvar clrs = {};\r\n\r\nconst clrBlank = \"rgba(0, 0, 0, 0)\"\r\nconst clrHistory = \"rgba(2, 64, 150, 1)\"\r\nconst clrHistoryFaded = \"rgba(2, 64, 150, 0.5)\";\r\nconst clrStart = \"rgba(252, 186, 3, 1)\";\r\nconst clrImp = \"rgba(207, 0, 0, 1)\";\r\nwindow.onload = function Init() {\r\n    mCan = document.getElementById(\"mCan\");\r\n    mCtx = mCan.getContext(\"2d\");\r\n    cCan = document.getElementById(\"cCan\");\r\n    cCtx = cCan.getContext(\"2d\");\r\n    cW = document.getElementById(\"canWrapper\");\r\n\r\n    timer = document.getElementById(\"timer\");\r\n\r\n    // Runs at 60fps (cannot be edited), but actual iterations per second can be adjusted (i still call fps)\r\n    setTimeout(Update, 1000 / afps);\r\n    setTimeout(IterateMethod, 1000 / fps);\r\n    inpCol = document.getElementById(\"col\");\r\n    inpRow = document.getElementById(\"row\")\r\n    inpSize = document.getElementById(\"size\")\r\n    inpGenType = document.getElementById(\"genType\");\r\n    inpFps = document.getElementById(\"fps\");\r\n    inpColour = document.getElementById(\"colour\");\r\n    inpShowProcess = document.getElementById(\"process\");\r\n\r\n    col = smiley.length;\r\n    row = smiley[0].length;\r\n\r\n    RedrawAll();\r\n}\r\nfunction Generate() {\r\n    UpdateGenOptions();\r\n    UpdateOptions();\r\n    StartMethod();\r\n    RedrawAll();\r\n}\r\nfunction RedrawAll() {\r\n    mCtx.clearRect(0, 0, mCan.width, mCan.height);\r\n    for (let r = 0; r < row; r++) {\r\n        for (let c = 0; c < col; c++) {\r\n            DrawTile(r, c);\r\n        }\r\n    }\r\n}\r\nfunction RedrawTile(r, c) {\r\n    if (showProcess) {\r\n        mCtx.clearRect(c * tileSize, r * tileSize, tileSize, tileSize);\r\n        DrawTile(r, c);\r\n    }\r\n}\r\nfunction DrawTile(r, c) {\r\n    let t = arr[r][c];\r\n    switch (t) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            mCtx.fillStyle = \"black\";\r\n            mCtx.fillRect(c * tileSize, r * tileSize, tileSize, tileSize);\r\n            break;\r\n        case 2:\r\n            mCtx.fillStyle = clrStart;\r\n            mCtx.fillRect(c * tileSize, r * tileSize, tileSize, tileSize);\r\n            break;\r\n    }\r\n}\r\nfunction DrawColors() {\r\n    if (useColor && showProcess) {\r\n        cCtx.clearRect(0, 0, cCan.width, cCan.height);\r\n        for (let [key, value] of Object.entries(clrs)) {\r\n            let [r, c] = StringToArray(key);\r\n            let clr = value;\r\n\r\n            cCtx.fillStyle = clr;\r\n            cCtx.fillRect(c * tileSize, r * tileSize, tileSize, tileSize);\r\n\r\n            // if history blue color fade it away\r\n            if (ChangeTransparency(clr, 1) === clrHistory) {\r\n                clr = DecreaseTransparency(clr)\r\n                SetColor(r, c, clr);\r\n                if (GetTransparency(clr) <= 0) {\r\n                    delete clrs[[r, c]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction Update() {\r\n    DrawColors();\r\n    UpdateTimer();\r\n\r\n    setTimeout(Update, 1000 / afps);\r\n}\r\nfunction StartMethod() {\r\n    if (cgen != gen.none) cgen.Start();\r\n    if (showProcess) RedrawAll();\r\n    timerStartValue = new Date().getTime();\r\n}\r\nfunction IterateMethod() {\r\n    if (cgen != gen.none) cgen.Iterate();\r\n    if ((!showProcess && cgen != gen.none)) { IterateMethod(); }\r\n    else {\r\n        // if (fps != 0)\r\n        setTimeout(IterateMethod, 1000 / fps);\r\n    }\r\n}\r\nfunction GetGenType() {\r\n    let t = inpGenType.value;\r\n    switch (t) {\r\n        case \"caveCA\":\r\n            cgen = CaveCA;\r\n            break;\r\n        case \"binaryTree\":\r\n            cgen = BinaryTree;\r\n            break;\r\n        case \"dfs\":\r\n            cgen = DFS;\r\n            break;\r\n        case \"kruskals\":\r\n            cgen = Kruskals;\r\n            break;\r\n        case \"prims\":\r\n            cgen = Prims;\r\n            break;\r\n        case \"rd\":\r\n            cgen = RecursiveDivison;\r\n            break;\r\n    }\r\n}\r\nclass Generations {\r\n    static IsMaze = true;\r\n    static Start() { }\r\n    static Iterate() { }\r\n}\r\nclass CaveCA extends Generations {\r\n    static IsMaze = false;\r\n    static Start() {\r\n        GenerateRandom();\r\n    }\r\n    static Iterate() {\r\n        var changeCount = 0;\r\n        for (let r = 0; r < row; r++) {\r\n            for (let c = 0; c < col; c++) {\r\n                var wCount = 0;\r\n                var eCount = 0;\r\n                for (let j = r - 1; j <= r + 1; j++) {\r\n                    for (let k = c - 1; k <= c + 1; k++) {\r\n                        if (IsPosValid(j, k)) {\r\n                            if (j != r || k != c) {\r\n                                if (arr[j][k] === 1) wCount++;\r\n                                else if (arr[j][k] === 0) eCount++;\r\n                            }\r\n                        }\r\n                        else {\r\n                            wCount++;\r\n                        }\r\n                    }\r\n                }\r\n                if (wCount > eCount && arr[r][c] != 1) {\r\n                    arr[r][c] = 1;\r\n                    changeCount++;\r\n                    SetColor(r, c, clrHistoryFaded);\r\n                }\r\n                else if (wCount < eCount && arr[r][c] != 0) {\r\n                    arr[r][c] = 0;\r\n                    changeCount;\r\n                    SetColor(r, c, clrHistoryFaded);\r\n                }\r\n                else {\r\n\r\n                }\r\n            }\r\n        }\r\n        if (changeCount === 0) {\r\n            StopGen();\r\n        }\r\n        if (showProcess) RedrawAll();\r\n    }\r\n}\r\nvar bar = 1;\r\nvar bac = 1;\r\nclass BinaryTree extends Generations {\r\n    static Start() {\r\n        GenerateFilled();\r\n        bar = 1;\r\n        bac = 1;\r\n        SetCell(bar, bac, 2);\r\n    }\r\n    // For each cell in the grid\r\n    static Iterate() {\r\n        // Check for possible connections up or to the left\r\n        let n = new Array();\r\n        if (IsPosValid(bar - 2, bac) && arr[bar - 2][bac] != 1) {\r\n            n.push([bar - 1, bac]);\r\n        }\r\n        if (IsPosValid(bar, bac - 2) && arr[bar][bac - 2] != 1) {\r\n            n.push([bar, bac - 1]);\r\n        }\r\n        // Randomly connect to one\r\n        if (n.length === 1) {\r\n            arr[n[0][0]][n[0][1]] = 0;\r\n            arr[bar][bac] = 0;\r\n\r\n            RedrawTile(n[0][0], n[0][1]);\r\n            RedrawTile(bar, bac);\r\n\r\n            SetColor(n[0][0], n[0][1], clrHistory);\r\n            SetColor(bar, bac, clrHistory);\r\n        }\r\n        else if (n.length === 2) {\r\n            let rand = GetRndInt(0, 2);\r\n            arr[n[rand][0]][n[rand][1]] = 0;\r\n            arr[bar][bac] = 0;\r\n\r\n            RedrawTile(n[rand][0], n[rand][1]);\r\n            RedrawTile(bar, bac);\r\n\r\n            SetColor(n[rand][0], n[rand][1], clrHistory);\r\n            SetColor(bar, bac, clrHistory);\r\n        }\r\n        else {\r\n            // nothing\r\n        }\r\n        bac += 2;\r\n        if (bac > col - 1) {\r\n            bar += 2;\r\n            if (bar > row - 1) {\r\n                SetCell(bar - 2, bac - 2, 2);\r\n                StopGen();\r\n                RedrawAll();\r\n            }\r\n            bac = 1;\r\n        }\r\n    }\r\n}\r\nvar dfsStack = [];\r\nvar dfsVisited = [];\r\nclass DFS extends Generations {\r\n    static Start() {\r\n        dfsStack = [[1, 1]];\r\n        dfsVisited = [];\r\n        dfsVisited.push(dfsStack[0]);\r\n        GenerateFilled();\r\n        SetCell(dfsStack[0][0], dfsStack[0][1], 2);\r\n    }\r\n    static Iterate() {\r\n        // Pop cell from the stack\r\n        let cell = dfsStack.pop();\r\n        let [r, c] = cell;\r\n        if (r === row - 2 && c === col - 2) {\r\n            SetCell(r, c, 2);\r\n        }\r\n        SetColor(r, c, clrHistory);\r\n        let n = new Array();\r\n        // Check adjacent cells for possible connections\r\n        if (IsPosValid(r + 2, c) && !IsArrayInArray(dfsVisited, [r + 2, c])) {\r\n            n.push([r + 2, c]);\r\n        }\r\n        if (IsPosValid(r - 2, c) && !IsArrayInArray(dfsVisited, [r - 2, c])) {\r\n            n.push([r - 2, c]);\r\n        }\r\n        if (IsPosValid(r, c + 2) && !IsArrayInArray(dfsVisited, [r, c + 2])) {\r\n            n.push([r, c + 2]);\r\n        }\r\n        if (IsPosValid(r, c - 2) && !IsArrayInArray(dfsVisited, [r, c - 2])) {\r\n            n.push([r, c - 2]);\r\n        }\r\n        // Visit and connect all neighbour cells\r\n        for (let i = 0; i < n.length; i++) {\r\n            dfsVisited.push(n[i]);\r\n            let ir = n[i][0];\r\n            let ic = n[i][1];\r\n            SetCell(ir, ic, 0);\r\n            SetCell(ir + (r - ir) / 2, ic + (c - ic) / 2, 0);\r\n\r\n            RedrawTile(ir, ic);\r\n            RedrawTile(ir + (r - ir) / 2, ic + (c - ic) / 2);\r\n\r\n            SetColor(ir, ic, clrHistory);\r\n            SetColor(ir + (r - ir) / 2, ic + (c - ic) / 2, clrHistory);\r\n        }\r\n        // Push neighbour cells to stack in random order\r\n        let ilength = n.length;\r\n        for (let i = 0; i < ilength; i++) {\r\n            let rand = GetRndInt(0, n.length);\r\n            dfsStack.push(n[rand]);\r\n            SetColor(n[rand][0], n[rand][1], clrImp)\r\n            n.splice(rand, 1);\r\n        }\r\n        if (dfsStack.length === 0) {\r\n            StopGen();\r\n        }\r\n    }\r\n}\r\n// Edges stores cell: id\r\n// EdgesReverse stores id: cell(s), used for optimized connecting\r\n// without having to iterate through all edges\r\nvar kruskalsEdges = {};\r\nvar kruskalsEdgesReverse = {};\r\nvar kruskalsIdCount;\r\nclass Kruskals extends Generations {\r\n    static Start() {\r\n        GenerateFilled();\r\n        kruskalsEdges = {};\r\n        let idPool = [];\r\n        for (let i = 0; i < ((row - 1) / 2) * ((col - 1) / 2); i++) {\r\n            idPool[i] = i;\r\n        }\r\n        kruskalsIdCount = idPool.length - 1;\r\n        let count = 0;\r\n        for (let r = 1; r < row; r += 2) {\r\n            for (let c = 1; c < col; c += 2) {\r\n                let rand = GetRndInt(0, idPool.length);\r\n                kruskalsEdges[[r, c]] = count;\r\n                kruskalsEdgesReverse[count] = [[r, c]];\r\n                idPool.splice(rand, 1);\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n    static Iterate() {\r\n        let t = GetRandomKey(kruskalsEdges);\r\n        let r = parseInt(t[0]);\r\n        let c = parseInt(t[1]);\r\n        SetColor(r, c, clrHistory);\r\n\r\n        let edge = kruskalsEdges[[r, c]];\r\n\r\n        // Check each adjacent cell for possible connections\r\n        let neighbourCells = new Array();\r\n        if (IsPosValid(r + 2, c) && kruskalsEdges[[r + 2, c]] != edge) {\r\n            neighbourCells.push([r + 2, c]);\r\n        }\r\n        if (IsPosValid(r - 2, c) && kruskalsEdges[[r - 2, c]] != edge) {\r\n            neighbourCells.push([r - 2, c]);\r\n        }\r\n        if (IsPosValid(r, c + 2) && kruskalsEdges[[r, c + 2]] != edge) {\r\n            neighbourCells.push([r, c + 2]);\r\n        }\r\n        if (IsPosValid(r, c - 2) && kruskalsEdges[[r, c - 2]] != edge) {\r\n            neighbourCells.push([r, c - 2]);\r\n        }\r\n        // Randomly choose one connectable cell and connect it\r\n        if (neighbourCells.length > 0) {\r\n            let rand = GetRndInt(0, neighbourCells.length);\r\n            let ir = neighbourCells[rand][0];\r\n            let ic = neighbourCells[rand][1];\r\n\r\n            SetCell(r, c, 0);\r\n            SetCell(ir, ic, 0);\r\n            SetCell(ir + (r - ir) / 2, ic + (c - ic) / 2, 0);\r\n\r\n            RedrawTile(r, c);\r\n            RedrawTile(ir, ic);\r\n            RedrawTile(ir + (r - ir) / 2, ic + (c - ic) / 2);\r\n\r\n\r\n            SetColor(ir, ic, clrHistory);\r\n            SetColor(ir + (r - ir) / 2, ic + (c - ic) / 2, clrHistory);\r\n\r\n            // Update subset ids\r\n            let idOld = kruskalsEdges[[ir, ic]];\r\n            let idNew = kruskalsEdges[[r, c]];\r\n            for (let cell = 0; cell < kruskalsEdgesReverse[idOld].length; cell++) {\r\n                kruskalsEdges[kruskalsEdgesReverse[idOld][cell]] = idNew;\r\n            }\r\n            kruskalsEdgesReverse[idNew] = kruskalsEdgesReverse[idNew].concat(kruskalsEdgesReverse[idOld]);\r\n            delete kruskalsEdgesReverse[idOld]\r\n\r\n            // If there is only one id left, the generation is complete\r\n            kruskalsIdCount--;\r\n            if (kruskalsIdCount <= 0) {\r\n                StopGen();\r\n            }\r\n        }\r\n        // If there are no possible connections, iterate again instead of waiting until next iteration\r\n        // (You could wait but then the generation would take much longer)\r\n        else {\r\n            this.Iterate();\r\n        }\r\n    }\r\n}\r\nvar primsUC = [];\r\nclass Prims extends Generations {\r\n    static Start() {\r\n        GenerateFilled();\r\n        primsUC = [];\r\n        SetCell(1, 1, 0);\r\n        primsUC.push([1, 3]);\r\n        primsUC.push([3, 1]);\r\n        SetColor(1, 3, clrImp);\r\n        SetColor(3, 1, clrImp);\r\n    }\r\n    static Iterate() {\r\n        if (primsUC.length > 0) {\r\n            let rand = GetRndInt(0, primsUC.length);\r\n            let [r, c] = primsUC[rand];\r\n            primsUC.splice(rand, 1);\r\n            // FOR SOME REASON arr[r][c] IS SOMETIMES A NONWALLED TILE??? WTF\r\n            if (arr[r][c] === 1) {\r\n\r\n                delete clrs[[r, c]];\r\n\r\n                // Loop through adjacent not-walled areas to connect to\r\n                let possibleConnect = [];\r\n                if (IsPosValid(r + 2, c) && arr[r + 2][c] != 1) {\r\n                    possibleConnect.push([r + 2, c]);\r\n                }\r\n                if (IsPosValid(r - 2, c) && arr[r - 2][c] != 1) {\r\n                    possibleConnect.push([r - 2, c]);\r\n                }\r\n                if (IsPosValid(r, c + 2) && arr[r][c + 2] != 1) {\r\n                    possibleConnect.push([r, c + 2]);\r\n                }\r\n                if (IsPosValid(r, c - 2) && arr[r][c - 2] != 1) {\r\n                    possibleConnect.push([r, c - 2]);\r\n                }\r\n\r\n                if (possibleConnect.length > 0) {\r\n                    let randC = GetRndInt(0, possibleConnect.length);\r\n                    let [ir, ic] = possibleConnect[randC];\r\n\r\n                    SetCell(r, c, 0);\r\n                    SetCell(ir, ic, 0);\r\n                    SetCell(ir + (r - ir) / 2, ic + (c - ic) / 2, 0);\r\n\r\n                    RedrawTile(r, c);\r\n                    RedrawTile(ir, ic);\r\n                    RedrawTile(ir + (r - ir) / 2, ic + (c - ic) / 2);\r\n\r\n                    SetColor(r, c, clrHistory);\r\n                    SetColor(ir, ic, clrHistory);\r\n                    SetColor(ir + (r - ir) / 2, ic + (c - ic) / 2, clrHistory);\r\n\r\n                    let pushToUc = [];\r\n                    if (IsPosValid(r + 2, c) && arr[r + 2][c] === 1) {\r\n                        pushToUc.push([r + 2, c]);\r\n                    }\r\n                    if (IsPosValid(r - 2, c) && arr[r - 2][c] === 1) {\r\n                        pushToUc.push([r - 2, c]);\r\n                    }\r\n                    if (IsPosValid(r, c + 2) && arr[r][c + 2] === 1) {\r\n                        pushToUc.push([r, c + 2]);\r\n                    }\r\n                    if (IsPosValid(r, c - 2) && arr[r][c - 2] === 1) {\r\n                        pushToUc.push([r, c - 2]);\r\n                    }\r\n                    for (let p = 0; p < pushToUc.length; p++) {\r\n                        primsUC.push(pushToUc[p]);\r\n                        SetColor(pushToUc[p][0], pushToUc[p][1], clrImp);\r\n                    }\r\n                }\r\n            }\r\n            else this.Iterate();\r\n        }\r\n        else {\r\n            StopGen();\r\n        }\r\n    }\r\n}\r\n// Not actually recursion even, but the technique used is similar - repeatedly split into sections with walls \r\nvar rdsCells = [];\r\nclass RecursiveDivison extends Generations {\r\n    static Start() {\r\n        GenerateEmptyBorder();\r\n        rdsCells = [];\r\n        for (let r = 2; r < row; r += 2) {\r\n            for (let c = 2; c < col; c += 2) {\r\n                rdsCells.push([r, c]);\r\n            }\r\n        }\r\n    }\r\n    static Iterate() {\r\n        let rand = GetRndInt(0, rdsCells.length);\r\n        let [r, c] = rdsCells[rand];\r\n\r\n        let adjacentCount = 0;\r\n        if (IsPosValid(r + 1, c) && arr[r + 1][c] === 1) {\r\n            adjacentCount++;\r\n        }\r\n        if (IsPosValid(r - 1, c) && arr[r - 1][c] === 1) {\r\n            adjacentCount++;\r\n        }\r\n        if (IsPosValid(r, c + 1) && arr[r][c + 1] === 1) {\r\n            adjacentCount++;\r\n        }\r\n        if (IsPosValid(r, c - 1) && arr[r][c - 1] === 1) {\r\n            adjacentCount++;\r\n        }\r\n        rdsCells.splice(rand, 1);\r\n        if (rdsCells.length <= 0) {\r\n            StopGen();\r\n        }\r\n        else {\r\n            if (adjacentCount == 0) {\r\n                let horv = Math.random();\r\n                let wallCells = [];\r\n                // Vertical\r\n                if (horv > 0.5) {\r\n                    let osr = 0;\r\n                    while (true) {\r\n                        if (IsPosValid(r + osr, c) && arr[r + osr][c] != 1) {\r\n                            wallCells.push([r + osr, c]);\r\n                            osr++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    osr = 0;\r\n                    while (true) {\r\n                        if (IsPosValid(r - osr, c) && arr[r - osr][c] != 1) {\r\n                            wallCells.push([r - osr, c]);\r\n                            osr++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Horizontal\r\n                else {\r\n                    let osc = 0;\r\n                    while (true) {\r\n                        if (IsPosValid(r, c + osc) && arr[r][c + osc] != 1) {\r\n                            wallCells.push([r, c + osc]);\r\n                            osc++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    osc = 0;\r\n                    while (true) {\r\n                        if (IsPosValid(r, c - osc) && arr[r][c - osc] != 1) {\r\n                            wallCells.push([r, c - osc]);\r\n                            osc++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (wallCells.length > 0) {\r\n                    let removeRand = GetRndInt(0, wallCells.length / 2);\r\n                    wallCells.splice(removeRand * 2 - 1, 1);\r\n                    for (let i = 0; i < wallCells.length; i++) {\r\n                        let [ir, ic] = wallCells[i];\r\n                        SetCell(ir, ic, 1);\r\n                        RedrawTile(ir, ic, 0);\r\n                        SetColor(ir, ic, clrHistory);\r\n                    }\r\n                }\r\n            }\r\n            else this.Iterate();\r\n        }\r\n    }\r\n}\r\n\r\nfunction GenerateRandom() {\r\n    NewArr();\r\n    for (let r = 0; r < row; r++) {\r\n        for (let c = 0; c < col; c++) {\r\n            if (Math.random() <= randDens) {\r\n                arr[r][c] = 1;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction GenerateFilled() {\r\n    NewArr();\r\n    for (let r = 0; r < row; r++) {\r\n        for (let c = 0; c < col; c++) {\r\n            arr[r][c] = 1;\r\n        }\r\n    }\r\n}\r\nfunction GenerateEmpty() {\r\n    NewArr();\r\n    for (let r = 0; r < row; r++) {\r\n        for (let c = 0; c < col; c++) {\r\n            arr[r][c] = 0;\r\n        }\r\n    }\r\n}\r\nfunction GenerateEmptyBorder() {\r\n    GenerateEmpty();\r\n    for (let r = 0; r < row; r++) {\r\n        for (let c = 0; c < col; c++) {\r\n            if (r == 0 || r == row - 1 || c == 0 || c == col - 1)\r\n                arr[r][c] = 1;\r\n        }\r\n    }\r\n}\r\n\r\n// Autoupdate is called when options are changed.. pre cringe imo\r\nfunction AutoUpdateOptions() {\r\n    // this if statement prevents it from instantly changing at beginning\r\n    if (arr != smiley) {\r\n        UpdateOptions();\r\n    }\r\n    RedrawAll();\r\n}\r\n// normal UpdateOptions is called manually\r\nfunction UpdateOptions() {\r\n    tileSize = parseInt(inpSize.value);\r\n\r\n    let w = col * tileSize;\r\n    let h = row * tileSize\r\n    cW.style.width = w + \"px\";\r\n    cW.style.height = h + \"px\";\r\n    mCan.width = w;\r\n    mCan.height = h;\r\n    cCan.width = w;\r\n    cCan.height = h;\r\n\r\n    fps = parseInt(inpFps.value);\r\n    useColor = inpColour.checked;\r\n    if (!useColor) ResetArrC();\r\n    showProcess = inpShowProcess.checked;\r\n}\r\nfunction IsPosValid(r, c) {\r\n    if (r >= 0 && r < row && c >= 0 && c < col) {\r\n        return true;\r\n    }\r\n    else return false;\r\n}\r\nfunction UpdateGenOptions() {\r\n    GetGenType();\r\n    col = parseInt(inpCol.value);\r\n    row = parseInt(inpRow.value);\r\n\r\n    // Mazes should have odd number of columns and rows\r\n    if (cgen.IsMaze === true) {\r\n        if (col % 2 === 0) col++;\r\n        if (row % 2 === 0) row++\r\n    }\r\n}\r\nfunction UpdateTimer() {\r\n    if (cgen != gen.none) {\r\n        timer.innerHTML = \"Time Elapsed: \" + ((new Date().getTime() - timerStartValue) / 1000) + \"s\";\r\n    }\r\n}\r\nfunction StopGen() {\r\n    RedrawAll();\r\n    UpdateTimer();\r\n    cgen = gen.none;\r\n}\r\nfunction NewArr() {\r\n    arr = Array.from(Array(row), _ => Array(col).fill(0));\r\n    ResetArrC();\r\n}\r\nfunction ResetArrC() {\r\n    clrs = {};\r\n}\r\nfunction SetCell(r, c, int) {\r\n    arr[r][c] = int;\r\n}\r\nfunction SetColor(r, c, color) {\r\n    if (useColor && showProcess) clrs[[r, c]] = color;\r\n}\r\nfunction StringToArray(pair) {\r\n    return pair.split(\",\");\r\n}\r\nfunction GetRndInt(min, max) { return Math.floor(Math.random() * (max - min)) + min; }\r\nfunction DecreaseTransparency(rgba) {\r\n    let nt = GetTransparency(rgba) - 0.05;\r\n    if (nt < 0) nt = 0;\r\n    return ChangeTransparency(rgba, nt);\r\n}\r\nfunction GetTransparency(rgba) {\r\n    return rgba.match(/[^,]+(?=\\))/);\r\n}\r\nfunction ChangeTransparency(rgba, transparency) {\r\n    return rgba.replace(/[^,]+(?=\\))/, \" \" + transparency);\r\n}\r\n\r\n// modified from //https://stackoverflow.com/a/41661388/8280780\r\nfunction IsArrayInArray(arr, item) {\r\n    var item_as_string = JSON.stringify(item);\r\n\r\n    var contains = arr.some(function (ele) {\r\n        return JSON.stringify(ele) === item_as_string;\r\n    });\r\n    return contains;\r\n}\r\n\r\nfunction GetRandomKey(obj) {\r\n    var keys = Object.keys(obj);\r\n    return StringToArray(keys[GetRndInt(0, keys.length)]);\r\n};"],"names":[],"version":3,"file":"index.c71f97c6.js.map","sourceRoot":"/__parcel_source_root/"}